<?php

/* 
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
function custom_payment_menu(){
  $items ['test-ajax-form'] = array(
    'title' => 'Example Page',
    'page callback' => 'drupal_get_form',
    'access callback' => TRUE,
    'page arguments' => array('ajax_example_simplest'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

function ajax_example_simplest($form, &$form_state) {
  $form = array();
  $form['changethis'] = array(
    '#title' => t("Choose something and explain why"),
    '#type' => 'select',
    '#options' => array(
      'one' => 'one',
      'two' => 'two',
      'three' => 'three',
    ),
    '#ajax' => array(
      'callback' => 'ajax_example_simplest_callback',
      'wrapper' => 'replace_textfield_div',
     ),
  );

  // This entire form element will be replaced with an updated value.
  // However, it has to have the prefix/suffix to work right, as the entire
  // div is replaced.
  // In this example, the description is dynamically updated during form
  // rebuild.
  $form['actions']['submit'] = array('#type' => 'submit',
    '#value' => t('Log in'),
    '#ajax' => array(
      'callback' => 'ajax_example_simplest_callback',
      'wrapper' => 'ajax-div',
      'event' => 'click',
    ),
  );
  $form['replace_textfield'] = array(
    '#type' => 'textfield',
    '#title' => t("Why"),
    '#prefix' => '<div id="replace_textfield_div">',
    '#suffix' => '</div>',
  );
  $form['replace_textfield1'] = array(
    '#type' => 'textfield',
    '#title' => t("Why 2 "),
    '#prefix' => '<div id="replace_textfield_div">',
    '#suffix' => '</div>',
  );

  if (!empty($form_state['values']['changethis'])) {
    $form['replace_textfield']['#description'] = t("Say why you chose") .  " '{$form_state['values']['changethis']}'";
  }
  
  
  return $form;
}

function ajax_example_simplest_callback($form, &$form_state) {
  // The form has already been submitted and updated. We can return the replaced
  // item as it is.
  return $form['replace_textfield1'];
}

function custom_payment_init() {
  // Since this file should only be loaded on the front page, it cannot be
  // declared in the info file.
  if (drupal_is_front_page()) {
    drupal_add_js(drupal_get_path('module', 'custom_payment') . 'js/foo.js');
  }
}
